---



@incollection{B1,
  title={Model-Based System Design Using SysML: The Role of the Evaluation Diagram},
  author={Tsadimas, Anargyros and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
  booktitle={Web Design and Development: Concepts, Methodologies, Tools, and Applications},
  abstract={Model-based system design is served by a single, multi-layered model supporting all design activities, in different levels of detail. SysML is a modeling language, endorsed by OMG, for system engineering, which aims at defining such models for system design. It provides discrete diagrams to describe system structure and components, to explore allocation policies crucial for system design, and to identify design requirements. In this chapter, SysML is used for the model-based design of enterprise information system architecture, supporting a systemic view of such systems, where software and hardware entities are treated as system components composed to create the system architecture. SysML extensions to facilitate the effective description of non-functional requirements, especially quantitative ones, and their verification are presented. The integration of evaluation parameters and results into a discrete SysML diagram enhances the requirement verification process, while the visualization of evaluation data helps system engineers to explore design decisions and properly adjust system design. Based on the proposed extensions, a SysML profile is developed. The experience obtained when applying the profile for renovating the architecture of a large-scale enterprise information system is also briefly discussed to explore the potential of the proposed extensions.},
  pages={278--301},
  year={2016},
  publisher={IGI Global}
}

@ARTICLE{J5,
  author={Kotronis, Christos and Nikolaidou, Mara and Tsadimas, Anargyros and Michalakelis, Christos and Anagnostopoulos, Dimosthenis},
  journal={IEEE Transactions on Engineering Management}, 
  title={Extending SysML to Integrate Cost Analysis Into Model-Based Systems Engineering}, 
  year={2022},
  abstract={Model-based systems design (MBSD), a current trend adopted by INCOSE, employs the systems modeling language (SysML), a standard introduced by OMG and INCOSE. Though there are numerous works on integrating performance exploitation in SysML, cost is not sufficiently explored as a driving design parameter. By integrating cost analysis in a popular modeling language like SysML, the proposed approach may be applied to any system designed using standardized languages and tools. In this work, we integrate cost analysis within SysML models at a generic level to explore design alternatives under specific cost and performance restrictions and perform tradeoff analysis. The proposed SysML extensions provide: 1) cost-related entities to encode cost aspects, such as capital and operating expenses, and 2) functions that enable the automatic computation of costs; these extensions are contained in a custom SysML cost profile. The feasibility and benefits of the approach are explored in two distinct real-world case studies with different purpose and characteristics. 1) Configuring a remote elderly monitoring system, taking into consideration patients' budgetary and operational concerns regarding the equipment installed in their homes. In this case, patients had the opportunity to evaluate and prioritize their concerns prior to using the system. 2) Exploring the improvement of the passengers' comfort as a level of service indicator in the Athens Metro railway system, taking into account operational cost constraints. In this case, the operator obtained forecasts of performance and cost of the metro system operation in order to choose between different operational policies.},
  volume={},
  number={},
  pages={1-16},
  doi={10.1109/TEM.2022.3200148}}

@ARTICLE{J4,
  author={Kapos, George-Dimitrios and Tsadimas, Anargyros and Kotronis, Christos and Dalakas, Vassilis and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
  journal={IEEE Transactions on Systems, Man, and Cybernetics: Systems}, 
  title={A Declarative Approach for Transforming SysML Models to Executable Simulation Models}, 
  year={2021},
  abstract={Systems Modeling Language (SysML) is an object management group standard for systems-of-systems engineering. It enables the description of complex system models; however, it cannot effectively support all system engineering activities. For instance, system performance evaluation is usually performed via simulation. In this case, the transformation of SysML system models to executable simulation models for specific simulation methodologies and tools is required. Model transformation is a key component for addressing the challenges of seamless integration of SysML model simulation in model-based system engineering. In this paper, we explore a declarative approach, based on the query/view/transformation-relations (QVT-R) standard, for the transformation of SysML models to executable simulation models, fully adhering model-driven architecture (MDA) concepts. It is supported by a framework implemented to provide executable simulation model and code generation. Methodological guidelines, for the effective use of a declarative language as QVT-R, for model transformation, are provided, emphasizing the utilization of existing domain-specific SysML profiles, as well as executable simulation library components. The experience obtained from two different domains, namely, enterprise information and railway transportation systems, modeled as systems-of-systems via SysML, is discussed, based on a quantitative analysis of the respective QVT-R transformations.},
  volume={51},
  number={6},
  pages={3330-3345},
  doi={10.1109/TSMC.2019.2922153}}


@article{J3,
  title={Employing SysML to model and explore levels-of-service: The case of passenger comfort in railway transportation systems},
  author={Kotronis, Christos and Nikolaidou, Mara and Kapos, George-Dimitrios and Tsadimas, Anargyros and Dalakas, Vassilis and Anagnostopoulos, Dimosthenis},
  journal={Systems Engineering},
  abstract={The concept of Level of Service (LoS) is not inherently supported by Systems Modeling Language (SysML), the standard modeling notation for model‚Äêbased systems engineering. This paper describes and demonstrates an approach that enhances SysML to enable LoS modeling and evaluation. A SysML profile enables the definition and visual verification of LoS during system operation, via LoS specific requirements, inside the system model, and the association of these requirements with specific system components. Hence, static and dynamic aspects of the system model are used for the LoS verification, while specific design alternatives are automatically proposed, in case the desired LoS is not achieved. As a proof of concept, the proposed approach was applied to explore passenger comfort, a key LoS metric, indicating space available to passenger in Railway Transportation Systems (RTSs). A specific case study on passenger comfort for the Athens Metro was conducted to derive insights regarding the practical aspects of the proposed approach.},
  volume={23},
  number={1},
  pages={82--99},
  year={2020},
  publisher={Wiley Online Library}
}

@article{J2,
	title={Challenges in SysML Model Simulation},
	author={Nikolaidou, Mara and Kapos, George-Dimitrios and Tsadimas, Anargyros and Dalakas, Vassilis and Anagnostopoulos, Dimosthenis},
	journal={Advances in Computer Science: an International Journal},
    abstract={Systems Modeling Language (SysML) is a standard proposed by the OMG for systems-of-systems (SoS) modeling and engineering. To this end, it provides the means to depict SoS components and their behavior in a hierarchical, multi-layer fashion, facilitating alternative engineering activities, such as system design. To explore the performance of SysML, simulation is one of the preferred methods. There are many efforts targeting simulation code generation from SysML models. Numerous simulation methodologies and tools are employed, while different SysML diagrams are utilized. Nevertheless, this process is not standardized, although most of current approaches tend to follow the same steps, even if they employ different tools. The scope of this paper is to provide a comprehensive understanding of the similarities and differences of existing approaches and identify current challenges in fully automating SysML models simulation process.},
	volume={5},
	number={4},
	pages={49--56},
	year={2016}
}


@article{J1,
	title = "Simulating simulation-agnostic SysML models for enterprise information systems via DEVS",
	journal = "Simulation Modelling Practice and Theory",
	volume = "66",
	number = "",
	pages = "243 - 259",
	year = "2016",
	note = "",
	issn = "1569-190X",
	doi = "http://dx.doi.org/10.1016/j.simpat.2016.04.001",
	url = "http://www.sciencedirect.com/science/article/pii/S1569190X16300259",
	author = "Anargyros Tsadimas and George-Dimitrios Kapos and Vassilis Dalakas and Mara Nikolaidou and Dimosthenis Anagnostopoulos",
	abstract= "Systems Modeling Language (SysML) is used as the modeling infrastructure in systems engineering, especially for complex systems design, independently of the system domain. Simulation is a common method to perform system model verification, during the systems development process. However, simulation code generation and execution is not integrated within the system design activity, as it is facilitated by SysML. It is either conducted as an external activity, after system design, or it affects the system design environment and practices, according to specific simulators requirements.
                This paper presents how existing, simulation-agnostic SysML models from the domain of Enterprise Information System (EISs), can be transformed to executable simulation code and in addition how the simulation results can be incorporated into the source SysML model through the exploitation of Model Driven Architecture (MDA) principles and techniques. To this end, several tools and technologies are utilized, while the verification process is triggered and finalized via the system modeling environment. Adoption of MDA provides a solid, high-level infrastructure and tool availability to the proposed approach.",
    keywords = "Automated simulation code generation",
	keywords = "Requirements verification",
	keywords = "Model-based system design",
	keywords = "SysML",
	keywords = "DEVS",
	keywords = "Non-functional requirements",
	keywords = "Model transformations",
	keywords = "MDA",
	keywords = "EIS"
}


@INPROCEEDINGS{C1,
  author={Kotronis, Christos and Tsadimas, Anargyros and Nikolaidou, Mara},
  booktitle={2021 IEEE International Systems Conference (SysCon)}, 
  title={Providing Designers with Automated Decision-Making within SysML Models to Promote Efficient Model-Based Systems Design}, 
  abstract={Systems of Systems (SoS) design is a complex process that involves, among other activities, the specification of system structure and requirements, the analysis of behavior and performance, and the exploration of the most appropriate system design solutions. Integration of these activities is advocated by Model-Based Systems Design (MBSD), where a core system model can be enriched with additional capabilities, such as performance analysis or decision-making. The Systems Modeling Language (SysML) is a standard language to utilize model-based design of SoS and create system models, specifying requirements and system constraints. In this work, we focus on integrating decision-making capabilities into SysML to enable system designers to explore alternative solutions that fit the requirements described in SysML. The system model is transformed to a decision model, whose results are automatically incorporated back into the system model. The proposed approach runs iteratively on any typical SysML model and facilitates the designer to explore alternative design solutions, minimizing the manual effort needed to achieve them. As a case study, the approach is applied in the design of a remote patient monitoring system, namely the Remote Elderly Monitoring System (REMS), where the designer decides on a system configuration that covers the needs of the patients.},
  year={2021},
  volume={},
  number={},
  pages={1-8},
  doi={10.1109/SysCon48628.2021.9447083}}

@INPROCEEDINGS{C2,
  author={Kotronis, Christos and Routis, Ioannis and Tsadimas, Anargyros and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
  booktitle={2019 IEEE International Congress on Internet of Things (ICIOT)}, 
  title={A Model-Based Approach for the Design of Cyber-Physical Human Systems Emphasizing Human Concerns}, 
  abstract={A Cyber-Physical Human System (CPHS) comprises software, hardware and the human, allowing interactions between them. While such systems become more complex, it is crucial to consider the human factor during their design, addressing human concerns. In previous work, the authors attempted to translate human concerns into criticalities, e.g., design requirements depicting human concerns, restricting CPHS usage. Here, an approach is proposed, aiming to facilitate the designer of CPHSs to integrate criticalities into the design process. This enables a more efficient design. For this purpose, we introduce a model-based approach adopting Object Management Group (OMG) standards, such as Business Process Model and Notation (BPMN), and Systems Modeling Language (SysML), to explore CPHS design and identify discrete views, representing both human and system aspects. Moreover, we explore the applicability of the proposed approach in the design of a Remote Elderly Monitoring System (REMS), where it is essential for the human to become part of the system wearing medical sensors. The identification of human criticalities during REMS design enabled the designer to evaluate different configurations considering human concerns.},
  year={2019},
  volume={},
  number={},
  pages={100-107},
  doi={10.1109/ICIOT.2019.00028}}

@InProceedings{C3,
author="Kotronis, Christos
and Tsadimas, Anargyros
and Nikolaidou, Mara
and Anagnostopoulos, Dimosthenis
and Dimitrakopoulos, George
and Amira, Abbes
and Bensaali, Faycal",
editor="Djemame, Karim
and Altmann, J{\"o}rn
and Ba{\~{n}}ares, Jos{\'e} {\'A}ngel
and Agmon Ben-Yehuda, Orna
and Naldi, Maurizio",
title="Leveraging Quality of Service and Cost in Cyber-Physical Systems Design",
booktitle="Economics of Grids, Clouds, Systems, and Services",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="208--217",
abstract="Cyber-Physical Systems (CPSs) comprise multiple cyberparts, physical processes, and human participants (end-users) that affect them, and vice versa. During the design of such systems, it is critical for the designer to take into account the end-user-perceived quality of provided services, as well as their cost, and integrate them into the CPSs; striking a satisfactory balance between quality and affordability is critical to system acceptance. In this work, we propose a model-based approach, using the Systems Modeling Language (SysML), to explore system design, encapsulating Quality of Service (QoS) and cost aspects, as system requirements, into a core model. Via this approach, the designer can define the system structure, configure it, measure and evaluate the quality, while analyzing cost, and find the best solution(s) for a correct design. As a use case, this approach is applied to a healthcare CPS, namely the Remote Elderly Monitoring System (REMS). In that context, managing REMS QoS and cost requirements, can contribute to an effective system design and implementation, enhancing the end-user satisfaction.",
isbn="978-3-030-36027-6"
}

@INPROCEEDINGS{C4,
  author={Kotronis, Christos and Tsadimas, Anargyros and Kapos, George-Dimitrios and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
  booktitle={2018 Annual IEEE International Systems Conference (SysCon)}, 
  title={Exploring LoS in railway transportation systems using SysML}, 
  abstract={Railway Transportation Systems (RTSs) are systems of high complexity consisting of other systems. Thus, they may be studied as Systems-of-Systems (SoS) using the Systems Modeling Language (SysML). Since their purpose is to provide transportation services that have a critical role in urban societies and affect millions of users, they have to be precisely evaluated, focusing on their adequacy to deliver the expected service quality. In the case of RTSs, service quality is expressed by Level of Service (LoS) indicators related to the passenger's experience within RTS components, such as stations and trains. Such indicators express, for example, space and time restrictions, and are standardized in international bodies. In this paper, an approach, integrating LoS concepts in Model-Based Systems Engineering (MBSE), is proposed, enabling the description and verification of LoS requirements for RTS SysML models. Exploiting SysML, a RTS model can be generated, populated with basic transportation entities and specific LoS requirements associated to them. Requirements are described in a simple, abstract fashion by the RTS engineer, while more specific requirements are automatically generated and associated with basic RTS components. Furthermore, verification of RTS LoS is facilitated, helping the system designer to assess alternative RTS operation scenarios. In this context, a case study discussing the Athens Metro System is briefly examined.},
  year={2018},
  volume={},
  number={},
  pages={1-8},
  doi={10.1109/SYSCON.2018.8369577}}

@InProceedings{C5,
author="Routis, Ioannis
and Tsadimas, Anargyros
and Nikolaidou, Mara",
editor="Stamelos, Ioannis
and Gonzalez-Baraho{\~{n}}a, Jesus M.
and Varlamis, Iraklis
and Anagnostopoulos, Dimosthenis",
title="Building a Social Platform Using FLOSS to Support Collaborative Communities: The ReWeee Case Study",
booktitle="Open Source Systems: Enterprise Software and Solutions",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="171--180",
abstract="In this paper we present the development of a collaborative community using exclusively open source software. After the definition of the functional requirements of the project, we focus on finding specific software components to satisfy these requirements. The intention was to minimize the development effort and labor, relying on open source software. As a result, the platform was developed writing less than 10{\%} of the required code and reusing more than 20 software components, not counting the software dependencies. The new components developed form our contribution to the community.",
isbn="978-3-319-92375-8"
}



@INPROCEEDINGS{C6, 
	author={C. Kotronis and A. Tsadimas and G. D. Kapos and V. Dalakas and M. Nikolaidou and D. Anagnostopoulos}, 
	booktitle={2016 IEEE International Conference on Systems, Man, and Cybernetics (SMC)}, 
	title={Simulating SysML transportation models}, 
    abstract={Model-based Systems Engineering (MBSE) promises efficient and effective systems development, by providing integrated system model views and streamlining the transition between different development activities. For instance, system testing with simulation should be provided as a simple facility for the performance evaluation of complex systems. Transportation systems are complex and their behavior is determined by dynamic factors. However, research efforts define simulation models for transportation systems, using custom or simulation-specific notation. Additionally, model-based approaches for transportation systems emphasize peripheral issues, such as safety conditions and environmental impact. In this work, a framework that enables seamless performance evaluation of Railway Transportation System (RTS) models via simulation is proposed. The de facto standard for MBSE modeling, Systems Modeling Language (SysML), is selected as the modeling infrastructure, while other standards, like Query/View/Transformation (QVT), are used for the generation of executable simulation models. The latter can be simulated in Discrete Event System Specification (DEVS) simulators and the simulation results are returned in the RTS SysML model. Additionally, the application of the framework in the public RTS of Athens and the obtained simulation results are presented.},
	year={2016}, 
	pages={001674-001679}, 
	keywords={SysML;discrete event simulation;formal specification;large-scale systems;railway industry;rapid transit systems;DEVS;MBSE;QVT;RTS;SysML transportation models;Systems Modeling Language;complex systems;discrete event system specification;model-based systems engineering;query/view/transformation;railway transportation system;simulation;system testing;transportation systems;Context modeling;Rail transportation;Simulation;Systems Modeling Language;Unified modeling language;DEVS;MDA;Model-based Engineering;QVT;Simulation;SysML;Transportation Systems}, 
	doi={10.1109/SMC.2016.7844478}, 
	month={Oct},}


@INPROCEEDINGS{C7, 
	author={E. Filiopoulou and P. Mitropoulou and A. Tsadimas and C. Michalakelis and M. Nikolaidou and D. Anagnostopoulos}, 
	booktitle={2015 11th International Conference on Innovations in Information Technology (IIT)}, 
	title={Integrating cost analysis in the cloud: A SoS approach}, 
    abstract={Cloud computing has succeeded in transforming the ICT industry, making software and hardware services even more accessible to businesses and establishing an environment for rapid innovation. Since cloud computing is an innovative business model, whose deployment is accompanied by huge investments, a thorough, multilevel cost analysis of provided services is vital. Such an analysis should focus, among others, on demand forecasting for computational resources and financial assessment of cloud computing investments, estimating crucial economic parameters, such as Net Present Value (NPV), Return of Investment (ROI) and Total Cost of Ownership (TCO). Into this context, a model-driven techno-economic approach is introduced in this paper targeting the estimation of economic parameters of cloud service deployment, which is able to assist decision support procedures for cloud users, cloud providers and cloud brokers. SysML is adopted as a modeling language for describing cloud architectures as system-of-systems (SoS), emphasizing cost properties. As an example, the Total Cost of Ownership (TCO) for cloud infrastructure and services is explored. TCO properties are incorporated into SysML cloud models, while cloud providers are facilitated in computing TCO.},
	year={2015}, 
	pages={278-283}, 
	keywords={cloud computing;investment;software architecture;software cost estimation;ICT industry;NPV;ROI;SoS approach;SysML;TCO;cloud architectures;cloud brokers;cloud computing;cloud infrastructure;cloud providers;cloud service deployment;cloud users;computational resources;cost properties;decision support procedures;demand forecasting;economic parameters estimation;financial assessment;hardware services;innovative business model;investments;model-driven techno-economic approach;modeling language;multilevel cost analysis;net present value;return of investment;software services;system-of-systems;total cost of ownership;Cloud computing;Computational modeling;Computer architecture;Economics;Investment;Techno-economic analysis;cloud models;system-of-systems;total cost of ownership}, 
	doi={10.1109/INNOVATIONS.2015.7381554}, 
	month={Nov},}

@inproceedings{C8,
	title={Model-based enterprise information system architectural design with {SysML}},
	author={Tsadimas, Anargyros},
    abstract={Model-based system design is commonly supported by Systems Modeling Language (SysML). When designing Enterprise Information Systems (EISs), software and network infrastructure architecture should be designed in parallel, ensuring system efficiency. Furthermore, non-functional requirements, such as performance ones, should be focused during EIS architecture design, as they play a significant role in system efficiency. The scope of this research is to provide a model-based approach for EIS architecture design, utilizing SysML as a modeling language. The system designer should be provided with alternative views, focusing on software and hardware architecture and facilitating non-functional requirements verification. Although SysML provides support for requirements specification, corresponding tools lack an automated requirements verification process. To this end, an integrated design environment is presented, not only capable of defining alternative EIS architectures, but also enabling architectural evaluation using simulation and integrating an automated non-functional requirement verification process utilizing simulation results.},
	booktitle={Research Challenges in Information Science (RCIS), 2015 IEEE 9th International Conference on},
	pages={492--497},
	year={2015},
	organization={IEEE}
}

@inproceedings{C9,
	title={Simulating {SysML} models: Overview and challenges},
	author={Nikolaidou, Mara and Kapos, George-Dimitrios and Tsadimas, Anargyros and Dalakas, Vassilios and Anagnostopoulos, Dimosthenis},
	abstract={SysML language, proposed by OMG, is a commonly accepted standard to model and study systems-of-systems (SoS). It provides the means to depict SoS components and their behavior in a multi-layer fashion and explore alterative architectures for their design. To validate SysML models in terms of performance criteria, simulation is usually the preferred method employed. To this end, different SysML diagrams are utilized, while numerous simulation methodologies and tools are employed. There are many efforts targeting simulation code generation from SysML models. Model-based system engineering concepts are adopted in most of them to generate simulation models from SysML models. Nevertheless, this process is not standardized, although most of current approaches tend to follow the same steps, even if they employ different tools. The scope of this paper is to provide a comprehensive understanding of the similarities and differences of existing approaches and identify current challenges in fully automating SysML models simulation process.},
    booktitle={System of Systems Engineering Conference (SoSE), 2015 10th},
	pages={328--333},
	year={2015},
	organization={IEEE}
}

@inproceedings{C10,
	title={Integrating simulation capabilities into {SysML} for enterprise information system design},
	author={Tsadimas, Anargyros and Kapos, George-Dimitrios and Dalakas, Vassilis and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
	abstract={Performance requirements play a significant role in the design of large-scale systems, such as enterprise information systems. Systems Modeling Language (SysML), proposed by Object Management Group (OMG) for system engineering, provides for requirements specification, though a verification method for quantitative requirements as performance ones is lacking. In the information systems domain, performance requirements are usually verified using simulation. To integrate simulation capabilities into SysML the authors have proposed the concept of the Evaluation View, a discrete diagram to specify enterprise information system architecture under evaluation and the conditions under which performance requirements should be verified. A corresponding SysML profile, called Enterprise Information System (EIS) profile, has been defined. In this paper we present an approach that provides (a) the automated transformation of SysML-based EIS models defined in the Evaluation View to executable simulation code for Discrete Event System Specification (DEVS) simulation environments and (b) the incorporation of simulation results into the original EIS SysML models to enable the verification of corresponding performance requirements.},
	booktitle={System of Systems Engineering (SOSE), 2014 9th International Conference on},
	pages={272--277},
	year={2014},
	organization={IEEE}
}

@InProceedings{C11,
	Title                    = {Model-based System Engineering using {SysML}: Deriving Executable Simulation Models with {QVT}},
	Author                   = {Georgios-Dimitrios Kapos and Vassilis Dalakas and Anargyros Tsadimas and Mara Nikolaidou and Dimosthenis Anagnostopoulos},
	Booktitle                = {SysCon},
	Abstract 				 = {model-based engineering (MBE). Although SysML may effectively serve the description of complex systems, it can not effectively support all model-based engineering activities. For example, system validation is usually performed via simulation. In this case, SysML system models should be transformed to domain-specific models, e.g. executable simulation models suitable for specific simulation tools. This paper identifies the key issues for efficient SysML model simulation, utilizing Model Driven Architecture (MDA) concepts. The generation of executable simulation code from SysML system models is considered as a model transformation from the SysML meta-model to the simulation meta-model. Since SysML meta-model is defined using Meta-Object Facility (MOF), the definition of MOF simulation meta-models and the utilization of the Query/View/Transformation (QVT) language for model transformations are analytically discussed. The presented approach is not restricted in a specific simulation framework or type. However, in this paper, the experience obtained from a case study on discrete event simulation is evaluated and the conditions that favor the selection of specific simulation frameworks are identified.},
	Year                     = {2014},
	Publisher                = {IEEE International Systems Conference}
}

@InProceedings{C12,
	Title                    = {Extending {SysML} to explore non-functional requirements: the case of information system design},
	Author                   = {Tsadimas, Anargyros and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
	Booktitle                = {Proceedings of the 27th Annual ACM Symposium on Applied Computing},
	Abstract				 = {Model-driven system design is facilitated by SysML language, which provides distinct diagrams to describe system structure and components, explore allocation policies and identify system requirements. While non-functional requirements play a significant role in system design, their are not effectively supported by SysML. This paper emphasizes on a SysML extension to facilitate the effective description and verification of non-functional quantitative requirements. The introduction of a distinct SysML diagram to explore evaluation results enhances requirement verification capabilities, while the visualization of verification process helps system engineers to explore design decisions and properly adjust system design. Based on the proposed SysML extension, a profile for Enterprise Information System architecture design was developed. To demonstrate the potential of the proposed approach, the description and verification of software performance requirements using this profile are discussed, as an example.},
	Year                     = {2012},
	
	Address                  = {New York, NY, USA},
	Pages                    = {1057--1062},
	Publisher                = {ACM},
	Series                   = {SAC '12},
	
	Acmid                    = {2231941},
	Doi                      = {10.1145/2231936.2231941},
	ISBN                     = {978-1-4503-0857-1},
	Keywords                 = {SysML, information system architecture, model-based system design, non-functional requirements, requirement verification},
	Location                 = {Trento, Italy},
	Numpages                 = {6},
	Url                      = {http://doi.acm.org/10.1145/2231936.2231941}
}



@InProceedings{C13,
	Title                    = {Model-based Enterprise Information System Architecture Design using {SysML}},
	Author                   = {Mara Nikolaidou and Anargyros Tsadimas and Dimosthenis Anagnostopoulos},
	Booktitle                = {IEEE Systems Conference 2010},
	Abstract				 = {A model-based approach for the design of enterprise information system architecture is proposed in this paper. It facilitates the progressive refinement of system architecture based on a well-defined model and the systematic manipulation of information exchange with other methodologies addressing related engineering activities (for example software design). The Systems Modeling Language (SysML) is used for the representation of the proposed system model. The SysML profile, constructed for that purpose, is presented. The experience obtained when applying the proposed SysML profile in the renovation of a large-scale enterprise information system is also briefly discussed.},
	Year                     = {2010},
	Month                    = {April},
	
	Owner                    = {rg},
	Timestamp                = {2013.05.21}
}


@InProceedings{C14,
	Title                    = {Evaluating software architecture in a model-based approach for enterprise information system design},
	Author                   = {Tsadimas, Anargyros and Nikolaidou, Mara and Anagnostopoulos, Dimosthenis},
	Booktitle                = {SHARK '10},
	Year                     = {2010},
	Abstract				 = {Enterprise information system architecture design is the process of defining and optimizing its structure (both software and hardware) to effectively support provided functionality. System architects are combining software and hardware vital components, usually defined by other stakeholders, and are dealing with both functional and non functional requirements. Alternative architecture solution evaluation is usually a part of the design process, aiming to determine if the defined requirements are satisfied. A model-based approach, constituted of discrete views, each of which facilitates a discrete design task, has been proposed, while Systems Modeling Language (SysML) has been adopted for the model representation. In this paper, emphasis is given on the Evaluation View, aiming at the exploration of alternative software and hardware combination scenarios proposed in other views. The view facilitates the management of simulation experiments and results and the verification of predefined requirements. A case study, where the proposed model-based design approach has been applied is also discussed.},
	
	Address                  = {New York, USA},
	Pages                    = {72--79},
	Publisher                = {ACM},
	
	Doi                      = {http://doi.acm.org/10.1145/1833335.1833346},
	ISBN                     = {978-1-60558-967-1},
	Location                 = {Cape Town, South Africa},
	Owner                    = {rg},
	Timestamp                = {2013.05.21}
}

@InProceedings{C15,
	Title                    = {Handling Non-functional Requirements in Information System Architecture Design},
	Author                   = {Anargyros Tsadimas and Mara Nikolaidou and Dimosthenis Anagnostopoulos},
	Booktitle                = {ICSEA '09},
	Abstract				 = {Information system architecture design is a complex task depending on both functional and non-functional requirements. Since system architecture definition is strongly related to system performance, non-functional requirements play a significant role during enterprise information system design. To explore the effect of non-functional requirements on system design process, a model-based approach emphasizing non-functional requirements is proposed. To facilitate the designer to effectively define and handle requirements during architecture design, a number of system views are offered, each of them focusing on discrete design issues and satisfying different kind of requirements. A consistent requirement model is defined representing how non-functional requirements are related between them and to system components forming the overall system architecture. SysML has been adopted as the modeling language, since it enables requirement definition and can be formally extended. Moreover, requirement derivation process is discussed and a case study where the proposed concepts are applied in practice while redesigning the legacy system of a large-scale organization is presented.},
	Year                     = {2009},
	Pages                    = {59-64},
	
	Bibsource                = {DBLP, http://dblp.uni-trier.de},
	Ee                       = {http://doi.ieeecomputersociety.org/10.1109/ICSEA.2009.18},
	Owner                    = {rg},
	Timestamp                = {2013.05.21}
}


@InProceedings{C16,
	Title                    = {{E}mploying {Z}achman {E}nterprise {A}rchitecture {F}ramework to Systematically Perform {M}odel-{B}ased {S}ystem {E}ngineering {A}ctivities},
	Author                   = {Nikolaidou, Mara and Tsadimas, Anargyros and Alexopoulou, Nancy and Anagnostopoulos, Dimosthenis},
	Booktitle                = {HICSS-42},
	Abstract				 = {There are numerous enterprise information system (EIS) engineering methodologies in the literature, each covering different aspects. However, in order to integrate them in an enterprise architecture, model-based engineering can be adopted. In such a case, a central system model is defined supporting all engineering activities. Zachman's matrix may be used as a basis for constructing such a model. Based on this assumption, we propose a systematic approach for the support of model-based EIS engineering process using Zachman matrix as EIS central model. Basic EIS engineering activities and the way they may be served by specific rows is explored, while the contribution of each system aspect (matrix column) is also taken into account. A conceptual model for model-based EIS engineering is also introduced. To explore the proposed concepts in practice, the system network cell is used as an example. Corresponding engineering tasks and sub-models are formed based on the proposed guidelines in a technology and methodology independent fashion. A case study based on the proposed concepts is also presented.},
	Year                     = {2009},
	Pages                    = {1-10},
	
	Bibsource                = {DBLP, http://dblp.uni-trier.de},
	Url                      = {http://dx.doi.org/10.1109/HICSS.2009.189}
}

@inproceedings{C17,
	title={Accommodating {EIS} {UML} 2.0 Profile using a standard {UML} modeling tool},
	author={Nikolaidou, Mara and Alexopoulou, Nancy and Tsadimas, Anargyros and Dais, Alexandros and Anagnostopoulos, Dimosthenis},
	booktitle={Software Engineering Advances, 2007. ICSEA 2007. International Conference on},
	abstract={Extension mechanisms offered by UML 2.0 are often explored in order to define UML profiles that serve specific modeling purposes. These UML 2.0 profiles should be effectively accommodated by standard UML-based modeling tools, which provide the means for applying them in practice. Almost every UML 2.0 modeling tool supports the definition of stereotypes and the description of constraints in Object Constraint Language. However, implementing a profile in practice often entails the development of additional functionality. This requirement mainly stems from the fact that when dealing with complex models it is more efficient for end-users to help them enforce a constraint rather than notify them when it is broken. Such issues, encountered when developing a UML 2.0 profile for enterprise information systems engineering using Rational Software Modeler as a standard UML 2.0 modeling tool, are discussed in the paper.},
	pages={26--26},
	year={2007},
	organization={IEEE}
}

@article{C18,
	title={Facilitating Enterprise Information System Engineering through a {UML} 2.0 Profile: A Case Study},
	author={Nikolaidou, M and Alexopoulou, N and Tsadimas, A and Dais, A and Anagnostopoulos, D},
	abstract={Modern enterprise information systems are distributed systems usually built on multi-tiered client server architectures and can be defined using well-established frameworks such as the Zachman framework or the Open Distributed Processing Reference Model (RM-ODP). Both frameworks identify views regarding the system designer‚Äôs viewpoint, but they do not suggest a methodology for view creation. A consistent framework for enterprise information system engineering, compatible with both the Zachman framework and RM-ODP is proposed by the authors. It consists of a metamodel describing alternative system views, a corresponding methodology comprising discrete stages performed either by the system designer or software tools and a UML 2.0 profile for view representation. In this paper, a case study where the proposed framework was applied is discussed, focusing on the features provided to the system designer using the UML 2.0 profile. The profile is implemented by extending the Rational Software Modeler functionality. },
	journal={Information Resource Management Association (IRMA 2007), Vancouver, British Columbia, Canada},
	year={2007}
}

@InProceedings{C19,
	Title                    = {Introducing a {UML} Profile for Distributed System Configuration},
	Author                   = {Alexopoulou, Nancy and Tsadimas, A. and Nikolaidou, Mara and Dais, A. and Anagnostopoulos, Dimosthenis},
	Booktitle                = {ICEIS: Databases and Information Systems Integration, Paphos, Cyprus, May 23-27, 2006},
	Abstract				 = {Distributed system configuration consists of distributed application component placement and underlying network design, thus is a complex process dealing with interrelated issues. A four-stage methodology has been proposed in order to effectively explore configuration problems. A common metamodel for distributed system representation in all configuration stages is thus required, so that unclear dependencies between discrete stages can be easily identified. This model should also be easily adopted by autonomous software tools used for the automation of discrete configuration stages and for the efficient development of system specifications by designers. We propose such a metamodel using UML 2.0. More specifically, we introduce a UML 2.0 profile facilitating distributed system configuration process. In this profile, different UML 2.0 diagrams are integrated and properly extended, in order to model all aspects of the distributed system configuration process. Stereotypes proved to provide an efficient extension mechanism as no metamodel extensions were needed. This profile can also be used within the Rational Modeler platform. },
	Year                     = {2006},
	Pages                    = {542-545},
	
	Bibdate                  = {2006-09-04},
	Bibsource                = {DBLP, http://dblp.uni-trier.de/db/conf/iceis/iceis2006-3.html#AlexopoulouTNDA06},
	ISBN                     = {972-8865-41-4},
	Owner                    = {rg},
	Timestamp                = {2013.05.21}
}

@InProceedings{C20,
	Title                    = {Extending {UML} 2.0 to Augment Control Over Enterprise Information System Engineering Process},
	Author                   = {Nikolaidou, Mara and Alexopoulou, Nancy and Tsadimas, A. and Dais, A. and Anagnostopoulos, Dimosthenis},
	Abstract				 = {Enterprise Information Systems can be described according to the Open Distributed Processing Reference Model (RM-ODP), where five different viewpoints are specified analyzing various aspects of the system. Configuration issues are explored in the Engineering Viewpoint of RM-ODP. In practice, configuration issues are explored in discrete stages, supported by autonomous software tools, each of which adopts its own metamodel for system representation. We propose a platform independent framework, which focuses on the Engineering Viewpoint of Enterprise Information Systems managing application configuration and network design issues independently of application development progress. In order to apply this framework using existing tools, model exchangeability and tool coordination must be supported by standard, open methods. Thus, a common metamodel is proposed to generate enterprise information system models, which are stored in XML. A UML 2.0 profile is defined to visualize these models, facilitate the designer to interact with them and coordinate specific tool invocation.},
	Booktitle                = {ICSEA},
	Year                     = {2006},
	Pages                    = {10},
	Publisher                = {IEEE Computer Society},
	
	Bibdate                  = {2006-12-22},
	Bibsource                = {DBLP, http://dblp.uni-trier.de/db/conf/icsea/icsea2006.html#NikolaidouATDA06},
	Crossref                 = {conf/icsea/2006},
	Owner                    = {rg},
	Timestamp                = {2013.05.21},
	Url                      = {http://doi.ieeecomputersociety.org/10.1109/ICSEA.2006.41}
}

@InProceedings{C21,
	Title                    = {A Consistent Framework for Enterprise Information System Engineering},
	Author                   = {Nikolaidou, Mara and Alexopoulou, Nancy and Tsadimas, A. and Dais, A. and Anagnostopoulos, Dimosthenis},
	Booktitle                = {EDOC},
	Abstract				 = {System engineering is the process of defining the desired architecture of a system and exploring performance requirements, ensuring that all system components are identified and properly allocated and system resources can provide the desired performance. A consistent framework for enterprise information engineering, compatible to Zachman framework is proposed. It consists of a metamodel describing different system views and the relations between them, a corresponding methodology of discrete stages, performed by the system designer or software tools, and a UML 2.0 profile for view representation.},
	Year                     = {2006},
	Pages                    = {492-496},
	Publisher                = {IEEE Computer Society},
	
	Bibdate                  = {2007-08-22},
	Bibsource                = {DBLP, http://dblp.uni-trier.de/db/conf/edoc/edoc2006.html#NikolaidouATDA06},
	Crossref                 = {conf/edoc/2006},
	ISBN                     = {0-7695-2558-X},
	Owner                    = {rg},
	Timestamp                = {2013.05.21},
	Url                      = {http://doi.ieeecomputersociety.org/10.1109/EDOC.2006.6}
}

@InProceedings{C22,
	Title                    = {A {UML} Profile utilizing Enterprise Information System Configuration},
	Author                   = {Nikolaidou, Mara and Tsadimas, A. and Alexopoulou, Nancy and Dais, A. and Anagnostopoulos, Dimosthenis},
	Booktitle                = {ICECCS},
	Abstract				 = {Enterprise information system configuration is a complex process dealing with interrelated issues. A four-stage methodology has been proposed in order to effectively explore configuration issues. The main advantage of the proposed methodology is the adoption of a common meta-model for the representation of systems throughout all configuration stages, ensuring interoperability and model consistency. In practice, configuration stages are supported by automated or semi-automated tools, each of which adopts its own meta-model for system representation. In order to apply the methodology using existing autonomous tools, model exchangeability (thus meta-model transformation) and tool co-ordination must be facilitated by standard, open methods. Thus, the common meta-model is implemented in a standard, exchangeable format, as XML. To provide a standard method to visualize the common meta-model, facilitate the designer to interact with it and co-ordinate specific tool invocation, a UML 2.0 profile was defined. Different UML 2.0 diagrams are integrated to support different views of the system. The representation of relationships and restrictions among discrete meta-model entities must be facilitated to identify and explore the dependencies between configuration stages. Constraints are extensively used for this purpose. A case study where the proposed profile utilized the configuration of a large-scale banking system is also presented.},
	Year                     = {2006},
	Pages                    = {77-88},
	Publisher                = {IEEE Computer Society},
	
	Bibdate                  = {2007-06-21},
	Bibsource                = {DBLP, http://dblp.uni-trier.de/db/conf/iceccs/iceccs2006.html#NikolaidouTADA06},
	Crossref                 = {conf/iceccs/2006},
	ISBN                     = {0-7695-2530-X},
	Owner                    = {rg},
	Timestamp                = {2013.05.21},
	Url                      = {http://doi.ieeecomputersociety.org/10.1109/ICECCS.2006.48}
}

@InProceedings{C23,
	Title                    = {Using UML to Model Distributed System Architectures},
	Author                   = {Nikolaidou, Mara and Alexopoulou, Nancy and Tsadimas, A. and Dais, A. and Anagnostopoulos, Dimosthenis},
	Booktitle                = {CAINE},
	Abstract				 = {Distributed system configuration is a complex process, since it involves solving interrelated issues, corresponding to different configuration stages usually supported by automated or semiautomated independent tools. A common model for distributed system representation in all configuration stages enables the identification of unclear application specific dependencies between discrete stages. It should also be easily realized in various software tools used to automate discrete configuration stages and facilitate the designer to efficiently provide system specifications. We propose to use UML to model all aspects of distributed system configuration process by extending and integrating different diagram types. Alternative views of the system emphasizing specific configuration stages are offered through the realization of extended UML diagrams. Rational Rose software platform is used for implementation purposes. },
	Year                     = {2005},
	Pages                    = {91-96},
	Publisher                = {ISCA},
	
	Bibdate                  = {2006-09-01},
	Bibsource                = {DBLP, http://dblp.uni-trier.de/db/conf/caine/caine2005.html#NikolaidouATDA05},
	ISBN                     = {1-880843-57-9},
	Owner                    = {rg},
	Timestamp                = {2013.05.21}
}

@inproceedings{C24,
author = {Souliotis, Nikos and Tsadimas, Anargyros and Nikolaidou, Mara},
title = {Real-Time Information about Public Transport's Position Using Crowdsourcing},
year = {2014},
isbn = {9781450328975},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2645791.2645807},
doi = {10.1145/2645791.2645807},
abstract = {Nowadays there is a multitude of mobile and tablet applications being developed in order to facilitate or disrupt every day tasks. Many of these are location based. A technique to serve in providing information and content is crowdsourcing. This technique is based on the public contributing information or resources giving them the opportunity to become both service providers and recipients at the same time.Taking into account the above and after observing passengers using the public transport system, we came to the conclusion that it would be useful to be able to determine which transport medium (i.e which bus line out of a number running concurrently) is nearer at any given moment. This information allows for better decision making and choice of transportation.For this we propose the development of an application to show the position of a selected transport vehicle. The position will be calculated based on geo-tracking provided by passengers boarded on a vehicle. This will allow for real time information to the application users in order to be able to determine their optimal route.},
booktitle = {Proceedings of the 18th Panhellenic Conference on Informatics},
pages = {1‚Äì6},
numpages = {6},
keywords = {Mobile Application, Transportations},
location = {Athens, Greece},
series = {PCI '14}
}

